{"version":3,"sources":["components/Icons/mail.js","components/Icons/arrow.js","components/Navbar/RightSlide/index.js","components/Navbar/index.js","App.js","serviceWorker.js","index.js"],"names":["MailIcon","react_default","a","createElement","xmlns","version","id","viewBox","d","React","Component","ArrowIcon","class","fill","RightSlide","className","arrow","Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","leftActive","rightActive","setState","concat","onClick","handleLeftClick","bind","mail","href","title","handleRightClick","components_Navbar_RightSlide","App","leftSideOpen","rightSideOpen","src_components_Navbar","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6a76da05.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass MailIcon extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" id=\"Capa_1\" viewBox=\"0 0 485.411 485.411\" >\r\n                <g>\r\n                <path d=\"M0,81.824v321.763h485.411V81.824H0z M242.708,280.526L43.612,105.691h398.187L242.708,280.526z    M163.397,242.649L23.867,365.178V120.119L163.397,242.649z M181.482,258.533l61.22,53.762l61.22-53.762L441.924,379.72H43.487   L181.482,258.533z M322.008,242.655l139.535-122.536v245.059L322.008,242.655z\"/>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n            </svg>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MailIcon;","import React from 'react';\r\n\r\nclass ArrowIcon extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <svg class='arrow' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M5.88 4.12L13.76 12l-7.88 7.88L8 22l10-10L8 2z\"/><path fill=\"none\" d=\"M0 0h24v24H0z\"/></svg>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ArrowIcon;","import React from 'react';\r\nimport './index.scss'\r\n\r\nimport ArrowIcon from '../../Icons/arrow'\r\n\r\nclass RightSlide extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='RightSlide'>\r\n                <ul className='main-navigation'>\r\n                    <li>\r\n                        <span>item 1</span>\r\n                        <ArrowIcon/>\r\n                    </li>\r\n                    <li>\r\n                        <span>item 2</span>\r\n                        <ArrowIcon/>\r\n                    </li>\r\n                    <li>\r\n                        <span>item 3</span>\r\n                        <ArrowIcon/>\r\n                    </li>\r\n                </ul>\r\n                <ul className='aside-navigation'>\r\n                    <li>item 1</li>\r\n                    <li>item 2</li>\r\n                    <li>item 3</li>\r\n                    <li>item 4</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RightSlide;","import React from 'react';\r\nimport './index.scss'\r\n\r\nimport MailIcon from '../Icons/mail';\r\n\r\nimport RightSlide from './RightSlide'\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            leftActive: false,\r\n            rightActive: false,\r\n        }\r\n    }\r\n\r\n    handleLeftClick() {\r\n        if (this.state.rightActive === true) {\r\n            this.setState(\r\n                {rightActive: !this.state.rightActive,}\r\n            );\r\n        }\r\n        this.setState(\r\n            {leftActive: !this.state.leftActive,}\r\n        );\r\n    }\r\n\r\n    handleRightClick() {\r\n        if (this.state.leftActive === true) {\r\n            this.setState(\r\n                {leftActive: !this.state.leftActive,}\r\n            );\r\n        }\r\n        this.setState(\r\n            {rightActive: !this.state.rightActive,}\r\n        );\r\n    }\r\n\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"navigation-container\">\r\n\r\n                <div className={`nav-left ${this.state.leftActive ? 'left-active' : 'left-hidden'}`}>\r\n                \r\n                </div>\r\n\r\n                <nav>\r\n                    <button className={this.state.leftActive ? 'button-active' : null} id='left-icon' onClick={this.handleLeftClick.bind(this)}>\r\n                        <MailIcon/>\r\n                    </button>\r\n                    <a href='/#' title='logo' className='logo'>\r\n                        <h1>APP</h1>                                \r\n                    </a>\r\n                    <button className={this.state.rightActive ? 'button-active' : null} id='right-icon' onClick={this.handleRightClick.bind(this)}>\r\n                        <span/>\r\n                        <span/>\r\n                        <span/>\r\n                    </button>\r\n                </nav>\r\n\r\n                <div className={`nav-right ${this.state.rightActive ? 'right-active' : 'right-hidden'}`}>\r\n                    <RightSlide/>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\nimport './App.scss';\n\n//import components\nimport Navbar from './components/Navbar'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      leftSideOpen: false,\n      rightSideOpen: false,\n    }\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './global.scss'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}